// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spirometer.UI;

#nullable disable

namespace Spirometer.Migrations
{
    [DbContext(typeof(SpirometerContext))]
    [Migration("20241129093331_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Spirometer.UI.Models.Patient", b =>
                {
                    b.Property<string>("CPRNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("CPRNumber");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Spirometer.UI.Models.SpirometerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPRNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("FEV1")
                        .HasColumnType("REAL");

                    b.Property<double>("FVC")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Ratio")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("RawData")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("CPRNumber");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("Spirometer.UI.Models.SpirometerData", b =>
                {
                    b.HasOne("Spirometer.UI.Models.Patient", "Patient")
                        .WithMany("Data")
                        .HasForeignKey("CPRNumber");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Spirometer.UI.Models.Patient", b =>
                {
                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
